# -*- coding: utf-8 -*-
'''
1.一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
'''
fib = lambda n:n if n <= 2 else fib(n-1) + fib(n-2)

'''
2.一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
'''
fib2 = lambda n: n if n < 2 else 2 * fib(n - 1)

'''
3 链表成对调换
1->2->3->4转换成2->1->4->3.
if head != None and head.next != None:
'''

'''
4.合并两个有序列表
尾递归
循环算法 
'''

'''
5.交叉链表求交点
'''

'''
6.二分查找
'''

'''
7.冒泡排序
从数组下标为0的位置开始，
比较下标位置为0和1的数据，
如果0号位置的大，则交换位置，如果1号位置大，则什么也不做，
然后右移一个位置，比较1号和2号的数据，和刚才的一样，如果1号的大，则交换位置，
以此类推直至最后一个位置结束，到此数组中最大的元素就被排到了最后，之后再根据之前的步骤开始排前面的数据，直至全部数据都排序完成。
'''

'''
8.选择排序
第1趟，在待排序记录r1 ~ r[n]中选出最小的记录，将它与r1交换；
第2趟，在待排序记录r2 ~ r[n]中选出最小的记录，将它与r2交换；
以此类推，第i趟在待排序记录r[i] ~ r[n]中选出最小的记录，将它与r[i]交换，使有序序列不断增长直到全部排序完毕。
'''

'''
7.快排
先从数列中取出一个数作为基准数。
分区过程，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边。
再对左右区间重复第二步，直到各区间只有一个数。
分片的思想+递归的思想，这是取了第一个为基准值，栈高为O(log(n)),栈长O(n),所以运行时间为栈高x栈长，也就是算法平均运算时间为O(nlog(n))
'''


'''
有面值为1元、3元和5元的硬币若干枚，如何用最少的硬币凑够11元
'''

'''
给定一个数组，构建二叉树，并且按层次打印这个二叉树
'''
