# -*- coding: utf-8 -*-
class Node(object):
    
    def __init__(self,data,left=None,right = None):
        self.data = data
        self.left = left
        self.right = right
        
tree = Node(1,Node(3, Node(7, Node(0)), Node(6)), Node(2, Node(5), Node(4)))

def lookup(root):
    row = [root]
    while row:
        print row
        row = [kid for item in row for kid in (item.left,item.right) if kid]
    
    
def deep(root):
    if not root:
        return
    print root
    deep(root.left)
    deep(root.right)
    
def mid_travelsal(root):
    if root.left is None:
        mid_travelsal(root.left)
    #访问当前节点
    print(root.value)
    if root.right is not None:
        mid_travelsal(root.right)

#前序遍历:访问当前节点,遍历左子树,遍历右子树

def pre_travelsal(root):
    print (root.value)
    if root.left is not None:
        pre_travelsal(root.left)
    if root.right is not None:
        pre_travelsal(root.right)

#后续遍历:遍历左子树,遍历右子树,访问当前节点

def post_trvelsal(root):
    if root.left is not None:
        post_trvelsal(root.left)
    if root.right is not None:
        post_trvelsal(root.right)
    print (root.value)
    
